{
  "openapi": "3.0.3",
  "info": {
    "title": "NineChat API",
    "version": "1.0.0",
    "description": "# Overview\n\nBem-vindo à **NineChat API**. Esta especificação foi gerada a partir dos arquivos de rotas fornecidos (agents, tickets, messages, customers, conversations, campaigns e analytics).\n\n- **Autenticação:** Bearer Token (JWT). Inclua o header `Authorization: Bearer {token}` em todas as requisições.\n- **Padrões de nomenclatura:** tags no plural; resumos *List/Get/Create/Update/Delete*.\n- **Erros:** respostas 4xx/5xx retornam um objeto `{ \"error\": \"mensagem\" }` quando aplicável.\n\n## Autenticação\nUse o esquema `bearerAuth` abaixo. Exemplo de cabeçalho HTTP:\n```http\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6...\n```"
  },
  "servers": [
    {
      "url": "https://api.ninechat.com.br/api/v1",
      "description": "Produção"
    },
    {
      "url": "https://sandbox.api.ninechat.com.br/api/v1",
      "description": "Sandbox"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Instruções para usar o header `Authorization: Bearer <token>`."
    },
    {
      "name": "Messages",
      "description": "Envio de mensagens e consultas relacionadas."
    },
    {
      "name": "Customers",
      "description": "Clientes (listagem, CRUD e busca)."
    },
    {
      "name": "Conversations",
      "description": "Conversas/filas para atendimento."
    },
    {
      "name": "Campaigns",
      "description": "Criação e acompanhamento de campanhas."
    },
    {
      "name": "Tickets",
      "description": "Tickets (histórico, PDF, fechamento e transferência)."
    },
    {
      "name": "Agents",
      "description": "Atendentes (status, sessões, pausas e presença)."
    },
    {
      "name": "Analytics",
      "description": "Painéis e métricas em tempo real."
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Descrição do erro"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "direction": {
            "type": "string",
            "enum": [
              "incoming",
              "outgoing",
              "system"
            ]
          },
          "type": {
            "type": "string"
          },
          "content": {},
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          }
        }
      },
      "MessageSendPayload": {
        "type": "object",
        "required": [
          "to",
          "type"
        ],
        "properties": {
          "to": {
            "type": "string",
            "description": "MSISDN E.164. Ex: 5511999999999"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "video",
              "audio",
              "document",
              "sticker",
              "location",
              "contacts"
            ]
          },
          "content": {
            "type": "object",
            "description": "Conteúdo conforme `type`. Para `text`, use `{ body }`; para mídia, use `{ url, filename?, caption? }`."
          },
          "context": {
            "type": "object",
            "properties": {
              "message_id": {
                "type": "string",
                "description": "Para reply/quote"
              }
            }
          },
          "channel": {
            "type": "string",
            "enum": [
              "whatsapp",
              "telegram"
            ],
            "default": "whatsapp"
          }
        }
      },
      "TemplateSendPayload": {
        "type": "object",
        "required": [
          "to",
          "template"
        ],
        "properties": {
          "to": {
            "type": "string"
          },
          "template": {
            "type": "object",
            "required": [
              "name",
              "language"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "language": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "pt_BR"
                  }
                }
              },
              "components": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        },
        "description": "Suporta forma legada com `templateName`, `languageCode` e `components`."
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/messages/send": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Send Message",
        "description": "Enfileira o envio de uma mensagem (WhatsApp/Telegram). Use `context.message_id` para reply/quote.",
        "responses": {
          "200": {
            "description": "Mensagem enfileirada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "enqueued": {
                      "type": "boolean"
                    },
                    "message": {
                      "$ref": "#/components/schemas/Message"
                    },
                    "channel": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageSendPayload"
              }
            }
          }
        }
      }
    },
    "/messages/send/template": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Send Template Message (WhatsApp)",
        "description": "Dispara uma mensagem de **template** (HSM). Aceita formato novo ou legado.",
        "responses": {
          "200": {
            "description": "Template enfileirado"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateSendPayload"
              }
            }
          }
        }
      }
    },
    "/messages/check-24h/{user_id}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Check 24h Window",
        "description": "Indica se é permitido envio *free-form* (WhatsApp) com base no último inbound do usuário.",
        "responses": {
          "200": {
            "description": "Janela de 24h",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "within24h": {
                      "type": "boolean"
                    },
                    "can_send_freeform": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID (chave da conversa)"
          }
        ]
      }
    },
    "/messages/read-status/{user_id}": {
      "put": {
        "tags": [
          "Messages"
        ],
        "summary": "Update Last Read",
        "description": "Atualiza o `last_read` do usuário.",
        "responses": {
          "200": {
            "description": "Atualizado"
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "last_read"
                ],
                "properties": {
                  "last_read": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/read-status": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "List Read Status",
        "description": "Lista `user_id` + `last_read` conhecidos.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/messages/unread-counts": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Unread Counters",
        "description": "Lista quantidade de mensagens **não lidas** por `user_id`.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/messages/{user_id}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "List User Messages",
        "description": "Lista mensagens de um usuário ordenadas por data (limites podem ser aplicados no backend).",
        "responses": {
          "200": {
            "description": "Mensagens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "List Customers",
        "description": "Paginação e busca por nome/telefone/user_id.",
        "responses": {
          "200": {
            "description": "Página de clientes"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Termo de busca"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Página (>=1)"
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [
                10,
                20,
                30,
                40
              ],
              "default": 10
            },
            "description": "Itens por página"
          }
        ]
      }
    },
    "/customers/{user_id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Customer",
        "description": "Retorna dados do cliente e ticket aberto (se existir).",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Update Customer",
        "description": "Atualiza `name` e `phone`.",
        "responses": {
          "200": {
            "description": "Atualizado"
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phone"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Patch Customer",
        "description": "Atualização parcial (`name`/`phone`).",
        "responses": {
          "200": {
            "description": "Atualizado"
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete Customer",
        "description": "Exclui cliente por `user_id`.",
        "responses": {
          "204": {
            "description": "Excluído"
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/conversations": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "List Conversations (assigned)",
        "description": "Conversas atribuídas ao agente informado (filtro por filas).",
        "responses": {
          "200": {
            "description": "Lista de conversas"
          }
        },
        "parameters": [
          {
            "name": "assigned_to",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "E-mail do atendente (obrigatório)"
          },
          {
            "name": "filas",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lista CSV de filas (obrigatório)"
          }
        ]
      }
    },
    "/conversations/queues": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "List Unassigned Queue",
        "description": "Itens de fila **não atribuídos** nas filas informadas.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "filas",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Lista CSV de filas (obrigatório)"
          }
        ]
      }
    },
    "/conversations/queues/next": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Assign Next from Queues",
        "description": "Atribui o próximo ticket disponível dentre as filas informadas ao atendente `email`.",
        "responses": {
          "200": {
            "description": "Ticket atribuído"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "queues"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "queues": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/campaigns": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "List Campaigns",
        "description": "Lista campanhas com agregados de progresso (itens processados, enviados, lidos, falhados).",
        "responses": {
          "200": {
            "description": "Campanhas"
          }
        },
        "parameters": [
          {
            "name": "tab",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "active",
                "finished",
                "failed"
              ],
              "default": "all"
            },
            "description": "Aba de filtro"
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Busca por nome"
          }
        ]
      },
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Create Campaign (CSV + Template)",
        "description": "Cria uma campanha a partir de um **CSV** (campo `file`) e metadados (`meta` JSON) **ou** campos planos (`name`, `template_name`, `language_code`, `components` JSON e `start_at`).",
        "responses": {
          "201": {
            "description": "Campanha criada"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "meta": {
                    "type": "string",
                    "description": "JSON com { name, start_at, template{ name, language{ code }, components? } }"
                  },
                  "name": {
                    "type": "string"
                  },
                  "template_name": {
                    "type": "string"
                  },
                  "language_code": {
                    "type": "string"
                  },
                  "components": {
                    "type": "string",
                    "description": "JSON string"
                  },
                  "start_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/campaigns/{id}": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Get Campaign",
        "description": "Detalhe da campanha (com agregados).",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "UUID da campanha"
          }
        ]
      }
    },
    "/campaigns/{id}/items": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "List Campaign Items",
        "description": "Lista itens (linhas CSV) associados à campanha com status por item.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "UUID da campanha"
          }
        ]
      }
    },
    "/tickets/history/{id}/pdf": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Download Ticket PDF",
        "description": "Gera/baixa o PDF do ticket normalizado.",
        "responses": {
          "200": {
            "description": "PDF",
            "content": {
              "application/pdf": {}
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do ticket"
          }
        ]
      }
    },
    "/tickets/history/{id}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get Ticket History",
        "description": "Retorna ticket, e opcionalmente mensagens e anexos (`include=messages,attachments`).",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do ticket"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Ex.: `messages,attachments`"
          },
          {
            "name": "messages_limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Limite de mensagens (padrão 100, máx. 500"
          }
        ]
      }
    },
    "/tickets/last/{user_id}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get User Last Ticket",
        "description": "Último ticket do usuário.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/tickets/{user_id}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get Open Ticket (by user)",
        "description": "Ticket aberto atual do usuário (se houver).",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Close Last Open Ticket (by user)",
        "description": "Fecha o último ticket aberto do usuário.",
        "responses": {
          "200": {
            "description": "Ticket fechado"
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "closed"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tickets/user/{user_id}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "List Closed Tickets (by user)",
        "description": "Lista de tickets fechados do usuário (ordem decrescente).",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/tickets/transferir": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Transfer Ticket to Queue",
        "description": "Transfere atendimento do `from_user_id` para `to_fila` (e opcionalmente `to_assigned_to`).",
        "responses": {
          "201": {
            "description": "Transferência criada"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "from_user_id",
                  "to_fila",
                  "transferido_por"
                ],
                "properties": {
                  "from_user_id": {
                    "type": "string"
                  },
                  "to_fila": {
                    "type": "string"
                  },
                  "to_assigned_to": {
                    "type": "string"
                  },
                  "transferido_por": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tickets/history": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Search Closed Tickets",
        "description": "Pesquisa no histórico de tickets fechados por período e texto.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Termo de busca"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Página"
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [
                10,
                20,
                30,
                40
              ],
              "default": 10
            },
            "description": "Itens por página"
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Data inicial (YYYY-MM-DD)"
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Data final (YYYY-MM-DD)"
          }
        ]
      }
    },
    "/agents": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "List Agents",
        "description": "Usuários com `perfil=atendente` (id, name, lastname, email, status, filas, created_at, session_id).",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/agents/{email}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Get Agent by Email",
        "description": "Dados do atendente.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "E-mail do atendente"
          }
        ]
      }
    },
    "/agents/status/{email}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Get Agent Status",
        "description": "Status atual do atendente por e-mail (inclui campos de referência usados no front).",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "E-mail do atendente"
          }
        ]
      }
    },
    "/agents/session/{email}": {
      "put": {
        "tags": [
          "Agents"
        ],
        "summary": "Open/Update Agent Session",
        "description": "Abre ou atualiza a sessão ativa do atendente (`session`).",
        "responses": {
          "200": {
            "description": "Sessão atualizada"
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "E-mail"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "session"
                ],
                "properties": {
                  "session": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agents/status/{session}": {
      "put": {
        "tags": [
          "Agents"
        ],
        "summary": "Close Session (by session token)",
        "description": "Fecha/atualiza status da sessão informada.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "session",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Identificador da sessão"
          }
        ]
      },
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Close Session (POST)",
        "description": "Equivalente ao PUT para encerrar sessão.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "session",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Identificador da sessão"
          }
        ]
      },
      "patch": {
        "tags": [
          "Agents"
        ],
        "summary": "Close Session (PATCH)",
        "description": "Equivalente ao PUT/POST para encerrar sessão.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "session",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Identificador da sessão"
          }
        ]
      }
    },
    "/agents/breaks/{email}": {
      "put": {
        "tags": [
          "Agents"
        ],
        "summary": "Start Break",
        "description": "Inicia pausa do atendente (`reason_id` **ou** `reason` texto).",
        "responses": {
          "200": {
            "description": "Pausa iniciada"
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "E-mail"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason_id": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agents/resume/{email}": {
      "put": {
        "tags": [
          "Agents"
        ],
        "summary": "Resume from Break",
        "description": "Encerra pausa do atendente.",
        "responses": {
          "200": {
            "description": "Pausa encerrada"
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "E-mail"
          }
        ]
      }
    },
    "/agents/presence/{email}": {
      "put": {
        "tags": [
          "Agents"
        ],
        "summary": "Update Presence (PUT)",
        "description": "Atualiza presença do atendente (online/offline) usando `session` e/ou `email` no corpo.",
        "responses": {
          "200": {
            "description": "Presença atualizada"
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "E-mail"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "session": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "online": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Update Presence (POST)",
        "description": "Mesma operação via POST.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "E-mail"
          }
        ]
      }
    },
    "/agents/heartbeat": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Heartbeat (POST)",
        "description": "Atualiza batimento/sinal de vida do atendente (mantém sessão ativa).",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "session": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Agents"
        ],
        "summary": "Heartbeat (PUT)",
        "description": "Variante via PUT do heartbeat.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "session": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agents/{id}": {
      "delete": {
        "tags": [
          "Agents"
        ],
        "summary": "Delete Agent",
        "description": "Remove usuário com `perfil=atendente` pelo `id`.",
        "responses": {
          "204": {
            "description": "Excluído"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/analytics/realtime": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Realtime Tickets",
        "description": "Tickets em tempo real por status (aguardando / em_atendimento).",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/analytics/metrics/summary": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Metrics Summary",
        "description": "KPIs gerais por período/filas/canais.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Data inicial (ISO 8601)"
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Data final (ISO 8601)"
          },
          {
            "name": "filas",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "CSV de filas"
          },
          {
            "name": "canal",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Canal (opcional)"
          }
        ]
      }
    },
    "/analytics/metrics/queues": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Metrics by Queue",
        "description": "Resumo por fila (quantidade, SLAs etc.).",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filas",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "canal",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/analytics/metrics/frt": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "First Response Time (FRT)",
        "description": "Distribuição de FRT por canal/fila/dia.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filas",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "canal",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "channel",
                "queue",
                "day"
              ],
              "default": "channel"
            },
            "description": "Agrupamento"
          }
        ]
      }
    },
    "/analytics/metrics/agents/art": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Agents Average Response Time (ART)",
        "description": "Tempo médio de resposta por agente.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fila",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "canal",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/analytics/metrics/duration-by-queue": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Conversation Duration by Queue",
        "description": "Duração média de conversas por fila/canal.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fila",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "canal",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/analytics/metrics/abandonment": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Abandonment",
        "description": "Taxa de abandono/sem atendimento por fila/canal.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fila",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "canal",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/analytics/metrics/aging-by-queue": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Aging by Queue",
        "description": "Tickets aguardando vs. em atendimento por fila.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fila",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "canal",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/analytics/agents/realtime": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Agents Realtime",
        "description": "Resumo de status dos atendentes (online, em pausa, em atendimento).",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/analytics/metrics/new-clients": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "New Clients",
        "description": "Novos clientes por dia/semana/mês.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "week",
                "month"
              ],
              "default": "day"
            },
            "description": "Agrupar"
          }
        ]
      }
    },
    "/analytics/metrics/feedback": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Record Feedback (NPS/CSAT)",
        "description": "Registra feedback (`type=nps|csat`, `score`, `channel`, `ticket_id?`).",
        "responses": {
          "201": {
            "description": "Registrado"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "score"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "nps",
                      "csat"
                    ]
                  },
                  "score": {
                    "type": "number"
                  },
                  "channel": {
                    "type": "string"
                  },
                  "ticket_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/metrics/series/nps": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "NPS Series",
        "description": "Série temporal de NPS por bucket (dia/semana/mês).",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bucket",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "week",
                "month"
              ],
              "default": "day"
            },
            "description": "Bucket de tempo"
          }
        ]
      }
    },
    "/analytics/metrics/series/csat": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "CSAT Series",
        "description": "Série temporal de CSAT por bucket (dia/semana/mês).",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bucket",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "week",
                "month"
              ],
              "default": "day"
            },
            "description": "Bucket de tempo"
          }
        ]
      }
    },
    "/analytics/metrics/feedback/responses": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Feedback Responses",
        "description": "Lista respostas registradas (filtros por tipo/canal/tempo).",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "nps|csat"
          },
          {
            "name": "channel",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  }
}
